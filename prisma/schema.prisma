// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                              String @id @default(cuid())
  name                            String?
  email                           String? @unique
  emailVerified                   DateTime?
  image                           String?
  hashedPassword                  String?
  createdAt                       DateTime @default(now())
  updatedAt                       DateTime @updatedAt

  conversations ConversationsOnUsers[]
  
  seenMessages UsersSeenOnMessages[]

  accounts Account[]
  messages Message[]

}

model Account {
  id                              String @id @default(cuid())
  userId                          String
  type                            String
  provider                        String
  providerAccountId               String
  refresh_token                   String? @db.Text
  access_token                    String? @db.Text
  expires_at                      Int?
  token_type                      String?
  scope                           String?
  id_token                        String? @db.Text
  session_state                   String?

  user User                       @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])

  @@unique([provider, providerAccountId])
}

model Conversation {
  id                              String @id @default(cuid())
  createdAt                       DateTime @default(now())
  lastMessageAt                   DateTime @default(now())
  name                            String?
  isGroup                         Boolean?

  messages Message[]

  users ConversationsOnUsers[]
}

model Message {
  id                              String @id @default(cuid())
  body                            String?
  image                           String?
  createdAt                       DateTime @default(now())

  seenUsers UsersSeenOnMessages[]

  conversationId                  String
  conversation Conversation       @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  @@index([conversationId])

  senderId                        String
  sender User                     @relation(fields: [senderId], references: [id], onDelete: Cascade)
  @@index([senderId])
}

model ConversationsOnUsers {
  user                            User @relation(fields: [userId], references: [id])
  userId                          String
  conversation                    Conversation @relation(fields: [conversationId], references: [id])
  conversationId                  String

  @@id([userId, conversationId])
  @@index([userId])
  @@index([conversationId])
}

model UsersSeenOnMessages {
  user                            User @relation(fields: [userId], references: [id])
  userId                          String
  message                         Message @relation(fields: [messageId], references: [id])
  messageId                       String

  @@id([userId, messageId])
  @@index([userId])
  @@index([messageId])
}
